@page "/packages/{id}/{version?}"
@model PackageModel

@{
    var DefaultVisibleVersions = 5;

    // TODO: Move these to model.
    var NotFound = false;

    var Package = new
    {
        Id = "Newtonsoft.Json",
        Version = "12.0.1",
        Description = "My package description!",
        Icon = new Uri("https://api.nuget.org/v3-flatcontainer/newtonsoft.json/13.0.1-beta2/icon"),
        UpdatedAt = DateTime.UtcNow.AddHours(-2),
        TotalDownloads = 536496,

        IsDependency = true,
        IsDotnetTool = true,
        IsDotnetTemplate = true,

        Versions = new[]
        {
            new
            {
                Version = "2.0.0",
                Downloads = 123,
                Date = DateTime.Now,
                Selected = true,
            },
            new
            {
                Version = "1.0.0",
                Downloads = 500,
                Date = DateTime.Now.AddDays(-1),
                Selected = false,
            }
        },

        DependencyGroups = new[]
        {
            new
            {
                TargetFramework = ".NET Standard 2.0",
                Dependencies = new[]
                {
                    new { PackageId = "Newtonsoft.Json", Range = "(>= 12.0.1)" },
                    new { PackageId = "Azure.Core", Range = "(>= 1.0.1)" }
                }
            }
        },
    };
}

@if (NotFound)
{
    <div>
        <h2>Oops, package not found...</h2>
        <p>Could not find package '@Model.Id'.</p>
        <p>You can try searching on <a href="https://www.nuget.org/packages?q=@Uri.EscapeDataString(Model.Id)" target="_blank" rel="noopener noreferrer">nuget.org</a> package.</p>
        <p>Think there's a problem? Consider taking a look at our <a href="https://loic-sharma.github.io/BaGet/" target="_blank" rel="noopener noreferrer">documentation</a> or asking for help on our <a href="https://github.com/loic-sharma/BaGet/issues" target="_blank" rel="noopener noreferrer">GitHub project</a></p>
    </div>
}
else
{
    @:Tabs for other package types

    <div class="row display-package">
        <aside class="col-sm-1 package-icon">
            <img src="@Package.Icon"
                 class="img-responsive"
                 onerror="this.src='@Url.Content("~/images/default-package-icon-256x256.png")'"
                 alt="The package icon" />
        </aside>

        <article class="col-sm-8 package-details-main">
            <div class="package-title">
                <h1>
                    @Package.Id

                    @Model.Id

                    <small class="text-nowrap">@Package.Version</small>
                </h1>
            </div>

            <div class="tabbed-info" x-data="{ tabs: tabs, active: tabs[0] }">
                <ul class="nav">
                    <template x-for="tab in tabs" :key="tab.name">
                        <li x-bind:class="{ active: tab.name === active.name }">
                            <a href="#" x-text="tab.name" @@click="active = tab"></a>
                        </li>
                    </template>
                </ul>

                <div class="content">
                    <div class="script" x-text="`${active.prefix} ${active.content}`"></div>

                    <div class="copy-button">
                        <button class="btn btn-default btn-warning"
                                type="button"
                                data-tottle="popover"
                                data-placement="bottom"
                                data-content="Copied"
                                @@click="window.baget.copyTextToClipboard(active.content.join('\n'), $el)">
                            <i class="ms-Icon ms-Icon--Copy"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="package-description">@Package.Description</div>

            @{ ExpandableSection(
                "Dependencies",
                expanded: false,
                @<div class="dependency-groups">
                    @if (!Package.DependencyGroups.Any())
                    {
                        @:This package has no dependencies.
                    }
                    else
                    {
                        foreach (var group in Package.DependencyGroups)
                        {
                            <h4>
                                <span>@group.TargetFramework</span>
                            </h4>

                            <ul class="list-unstyled dependency-group">
                                @foreach (var dependency in group.Dependencies)
                                {
                                    <li>
                                        <a asp-page="Package"
                                           asp-route-id="@dependency.PackageId"
                                           asp-route-version="@null">
                                            @dependency.PackageId
                                        </a>

                                        <span> @dependency.Range</span>
                                    </li>
                                }
                            </ul>
                        }
                    }
                </div>);
            }

            @{ ExpandableSection("Versions", expanded: true,
                @<div class="version-list" x-data="{ showAll: false }">
                    <table class="table borderless">
                        <thead>
                            <tr>
                                <th>Version</th>
                                <th>Downloads</th>
                                <th>Last updated</th>
                            </tr>
                        </thead>
                        <tbody class="no-border">
                            @for (var i = 0; i < Package.Versions.Length; i++)
                            {
                                var version = Package.Versions[i];
                                var alwaysShow = Json.Serialize(i < DefaultVisibleVersions);

                                <tr class="@(version.Selected ? "bg-info" : "")" x-show="showAll || @alwaysShow">
                                    <td><a asp-page="Package" asp-route-version="@version.Version">@version.Version</a></td>
                                    <td>@version.Downloads.ToString("N0")</td>
                                    <td>@version.Date.ToShortDateString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (Package.Versions.Length > DefaultVisibleVersions)
                    {
                        <button type="button" class="link-button" @@click="showAll = !showAll">
                            <i class="ms-Icon" x-bind:class="{ 'ms-Icon--CalculatorAddition': !showAll, 'ms-Icon--CalculatorSubtract': showAll }"></i>
                            <span x-text="showAll ? 'Show less' : 'Show more'"></span>
                        </button>
                    }

                </div>);
            }
        </article>

        <article class="col-sm-3 package-details-info">
            <div>
                <h2>Info</h2>

                <ul class="list-unstyled ms-Icon-ul">
                    <li>
                        <i class="ms-Icon ms-Icon--History"></i>
                        Last updated @Package.UpdatedAt.Humanize()
                    </li>

                    @if (true)@* TODO: Has project URL*@
                    {
                        <li>
                            <i class="ms-Icon ms-Icon--Globe"></i>
                            <a href="#">Project URL</a>
                        </li>
                    }

                    <li>
                        <i class="ms-Icon ms-Icon--CloudDownload"></i>
                        <a href="#">Download package</a>
                    </li>
                </ul>
            </div>

            <div>
                <h2>Statistics</h2>

                <ul class="list-unstyled ms-Icon-ul">
                    <li>
                        <i class="ms-Icon ms-Icon--Download"></i>
                        @Package.TotalDownloads.ToString("N0") total downloads
                    </li>

                    <li>
                        <i class="ms-Icon ms-Icon--Giftbox"></i>
                        @Package.Versions[0].Downloads.ToString("N0") downloads of current version
                    </li>
                </ul>
            </div>

            <div>
                <h2>Authors</h2>

                <p>Author 1, author 2</p>
            </div>
        </article>
    </div>
}

<script type="text/javascript">
    let tabs = [
        // TODO: ALL TABS FOR ALL PACKAGE TYPES
        @if (Package.IsDependency)
        {
            <text>
            {
                name: ".NET CLI",
                prefix: ">",
                content: ["dotnet add package @Package.Id --version @Package.Version"],
            },
            {
                name: "PackageReference",
                prefix: "",
                content: ["<PackageReference Include=\"@Package.Id\" Version=\"@Package.Version\">"]
            }
            </text>
        }
    ];
</script>

@functions {
    private void ExpandableSection(string title, bool expanded, Func<object, IHtmlContent> template)
    {
        <div class="expandable-section" x-data="{ expanded: @Json.Serialize(expanded) }">
            <h2>
                <button type="button" class="link-button" @@click="expanded = !expanded">
                    <i x-bind:class="{ 'ms-Icon--ChevronDown': expanded, 'ms-Icon--ChevronRight': !expanded }"
                       class="ms-Icon">
                    </i>
                    <span>@title</span>
                </button>
            </h2>

            <div x-show="expanded">@template(null)</div>
        </div>
    }
}
